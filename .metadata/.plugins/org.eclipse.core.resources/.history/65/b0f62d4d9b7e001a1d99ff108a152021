/*
 ============================================================================
 Name        : LaboProg1Proj.c
 Author      : mdangelo
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdio_ext.h>

//=====UTN Prog y Labo==========
#include "./ejercicios/ejrc1_clase2.h"
#include "./ejercicios/ejrcA_clase2.h"
#include "./ejercicios/ejrcB_clase2.h"
#include "./ejercicios/ejrcC_clase2.h"
#include "./ejercicios/ejrc1_clase3.h"

//====Alg-Fondo===============
#include "./alg_fondo/ejrc1_4.h"
#include "./alg_fondo/ejrc1_8_nprim.h"
#include "./alg_fondo/ejrc2_12_planilla.h"
#include "alg_fondo/ejrc2_13.h"
#include "alg_fondo/ejrc3_3_bisiesto.h"


void clase5A(void);
void clase5B(void);
void clase5C(void);

void _chargeArrayRandom(int *pNotas);
void _showAllArrayContent(int *pNotas);
void _initializeArray(int *pNotas);
int _getArrayIndex(int iLength);
int _getValueBetween(char *pMssg,int iFrom, int iUntil);
void _overWriteArray(int *pArr,int iIndx, int iVale);

#define LENGTH 5
#define LENGTH_2 7

int main(void) {
	//=====UTN============
	//ejerc1Clase2(); //calculadora
	//ejrcAClase2();
	//ejrcBClase2();
	//ejrcCClase2();
	//ejerc1Clase3(); //funciones - clase 3 labo-prog

	//clase5B();
	clase5C();


	//=====Alg-Fondo============
	//ejerc14Fecha();
	//esPrimo();
	//procesarALumnos();
	//ejrc213Billetes(); //billetes
	//ejerc313Bisiesto();

	return EXIT_SUCCESS;
}

void clase5A(void){
	int edades[3] = {1,2,3};

	printf("===VALORES=====\n");
	printf("-->A: %d\n", edades[1]);
	printf("-->B: %d\n", *(edades+1));

	printf("===DIRECC MEMORIA=====\n");
	printf("-->C: %0x\n", &edades[1]);
	printf("-->D: %0x\n", edades+1);
	printf("-->Z: %d\n", &edades[1]);
}


/*La suma acomulada
 * La cantidad de notas cargadas
 * La cantidad de aprobados
 * La cantidad de desaprobados
 * La nota maxima
 * La nota minima
 * La cantidad de notas pares
 *
 * mostrar todos los elementos
 * mostrar los elementos vacios con su indice para  el cliente
 * mostrar solo los elementos cargados
 * */
void clase5C(){
	int notas[LENGTH]={1,2,6,6,8,10};
}

void _getValuesCharged(int *pArrs, int iInitVal){
	for(int i=0; i<LE)
}

void clase5B(){
	int notas[LENGTH];

	_initializeArray(notas);
	_showAllArrayContent(notas);
	_chargeArrayRandom(notas);
	_showAllArrayContent(notas);
}


void _chargeArrayRandom(int *pNotas){
	int i;
	int nota = 0;
	char cargar = 'S';

	do{
		i =_getArrayIndex(LENGTH);
		nota = _getValueBetween("Ingrese la nota. [1,10]:", 1, 10);


		if(*(pNotas+i)>0){
			_overWriteArray(pNotas,i, nota);
		}else{
			*(pNotas+i) = nota;
		}
		printf("===Listo====\n");

		printf("Desea cargar otra nota? S|N ?");
		scanf("%c",&cargar);
		__fpurge(stdin);
		cargar = toupper(cargar);

	}while(cargar=='S');
}

void _showAllArrayContent(int *pNotas){
	for(int i=0; i<LENGTH-1; i++){
		printf("Posicion %d nota %d\n",i,*(pNotas+i));
	}
}

int _getArrayIndex(int iLength){
	int i;
	do{
		printf("En que posicion quiere ingresar la nota nota: [0,%d]: ",iLength-2);
		scanf("%d",&i);
		__fpurge(stdin);
	}while(i < 0 || i>iLength-2);
	return i;
}

void _initializeArray(int *pNotas) {
	for(int i=0; i<LENGTH-1; i++){
		*(pNotas+i) = 0;
	}
}

int _getValueBetween(char *pMssg,int iFrom, int iUntil){
	int iValue=0;
	do{
		printf(pMssg);
		scanf("%d",&iValue);
		__fpurge(stdin);
	}while(iValue<iFrom || iValue>iUntil);
	return iValue;
}

void _overWriteArray(int *pArr,int iIndx, int iVale){
	char sobr = 'S';
	do{
		printf("ATENCION: Ya hay un valor en esta posicion. Desdea sobreescribirla? S|N: \n");
		scanf("%c",&sobr);
		__fpurge(stdin);
		sobr = toupper(sobr);
	}while(sobr != 'S' && sobr != 'N');
	if(sobr == 'S'){
		*(pArr+iIndx) = iVale;
	}else{
		printf("No se sobreescribira ningun valor!\n");
	}

}
